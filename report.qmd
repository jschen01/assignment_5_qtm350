---
title: "World Development Indicators Analysis (2022)"
author: "Joyce Chen"
date: "2025-02-26"
format:
  html: default
  pdf: default
bibliography: references.bib
---


## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

``` {python}

# Install the necessary libraries
# pip install pandas
# !pip install wbgapi

# Import the libraries
import pandas as pd
import wbgapi as wb

```

## Task 2


``` {python}

# Define the indicators to download
indicators = {
    'gdp_per_capita': 'NY.GDP.PCAP.CD',
    'gdp_growth_rate': 'NY.GDP.MKTP.KD.ZG',
    'inflation_rate': 'FP.CPI.TOTL.ZG',
    'unemployment_rate': 'SL.UEM.TOTL.ZS',
    'total_population': 'SP.POP.TOTL',
    'life_expectancy': 'SP.DYN.LE00.IN',
    'adult_literacy_rate': 'SE.ADT.LITR.ZS',
    'income_inequality': 'SI.POV.GINI',
    'health_expenditure_gdp_share': 'SH.XPD.CHEX.GD.ZS',
    'measles_immunisation_rate': 'SH.IMM.MEAS',
    'education_expenditure_gdp_share': 'SE.XPD.TOTL.GD.ZS',
    'primary_school_enrolment_rate': 'SE.PRM.ENRR',
    'exports_gdp_share': 'NE.EXP.GNFS.ZS'
}

# Get the list of country codes for the "World" region
country_codes = wb.region.members('WLD')

# Download data for countries only in 2022
df = wb.data.DataFrame(indicators.values(), economy=country_codes, time=2022, skipBlanks=True, labels=True).reset_index()

# Delete the 'economy' column
df = df.drop(columns=['economy'], errors='ignore')

# Create a reversed dictionary mapping indicator codes to names
# Rename the columns and convert all names to lowercase
df.rename(columns=lambda x: {v: k for k, v in indicators.items()}.get(x, x).lower(), inplace=True)

# Sort 'country' in ascending order
df = df.sort_values('country', ascending=True)

# Reset the index after sorting
df = df.reset_index(drop=True)

# Display the number of rows and columns
print(df.shape)

# Display the first few rows of the data
print(df.head(3))

# Save the data to a CSV file
df.to_csv('wdi.csv', index=False)

```

## Task 3

```{python}
# Select relevant indicators
selected_indicators = ["gdp_per_capita", "inflation_rate", "unemployment_rate"]
df[selected_indicators].describe()

# Check for missing values
df[selected_indicators].isnull().sum()

```

## Task 4

### GDP per Capita Distribution (Histogram)

```{python}

import matplotlib.pyplot as plt
import seaborn as sns

plt.figure(figsize=(10, 5))
sns.histplot(df["gdp_per_capita"].dropna(), bins=30, kde=True)
plt.xlabel("GDP per Capita")
plt.ylabel("Frequency")
plt.title("Distribution of GDP per Capita (2022)")
plt.show()

```

### Scatter Plot: Inflation Rate vs Unemployment Rate

```{python}

plt.figure(figsize=(8, 5))
sns.scatterplot(x=df["inflation_rate"], y=df["unemployment_rate"])
plt.xlabel("Inflation Rate (%)")
plt.ylabel("Unemployment Rate (%)")
plt.title("Inflation vs Unemployment Rate (2022)")
plt.show()

```

## Task 5

```{python}

summary_table = df[selected_indicators].describe().T
summary_table


```